name: nes-emulator

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        toolchain: [stable]
    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Get Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Install linux dependencies
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt update; sudo apt install --no-install-recommends libasound2-dev libudev-dev

      - name: Run cargo test w/ -D warnings
        run: cargo test -- --test-threads=1
        env:
          RUSTFLAGS: "-D warnings"

      - name: Build the Rust binary
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        run: |
          cargo build --release

      # Collect binary and README.md for the release
      - name: Prepare the release artifact
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        run: |
          mkdir release
          cp target/release/nes-emulator release/
          cp README.md release/

      # Archive the release artifact
      - name: Create tarball
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        run: |
          tar -czvf nes-emulator-${{ runner.os }}.tar.gz -C release .

      # Create a GitHub release and upload the artifact
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: nes-emulator-${{ runner.os }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Provided automatically by GitHub

  clippy:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Get stable Rust toolchain with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Install linux dependencies
        run: sudo apt update; sudo apt install --no-install-recommends libasound2-dev libudev-dev
